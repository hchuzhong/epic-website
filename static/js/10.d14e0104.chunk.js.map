{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Dragger","Upload","Result","styled","div","H1","h1","Image","img","Component","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","height","setHeight","serverFile","attributes","url","widthStr","heightStr","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","window","test","type","size","error","upload","then","catch","tip","spinning","isUploading","className","InboxOutlined","target","href","filename","src","alt","ref","onChange","current","value","placeholder","fullStr","Tips","children","Home","Uploader"],"mappings":"giBAQOA,EAAWC,IAAXD,QAEDE,EAASC,IAAOC,IAAV,KAKNC,EAAKF,IAAOG,GAAV,KAIFC,EAAQJ,IAAOK,IAAV,KAwGIC,EApGGC,aAAS,WAAO,IAAD,EACCC,cAAzBC,EADwB,EACxBA,WAAYC,EADY,EACZA,UACbC,EAAOC,mBACPC,EAAOD,mBACPE,EAAQC,aAAc,iBAAO,CACjCC,MAAO,KACPC,SAFiC,SAExBD,GACPF,EAAME,MAAQA,GAEhB,eACE,OAAOF,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE7CE,OAAQ,KACRC,UATiC,SASvBD,GACRJ,EAAMI,OAASA,GAEjB,gBACE,OAAOJ,EAAMI,OAAN,aAAqBJ,EAAMI,QAAW,IAE/C,cACE,OAAOT,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBR,EAAMS,SAAWT,EAAMU,eAWpGC,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAAAC,GAGZ,OAFAnB,EAAWoB,QAAQD,GACnBnB,EAAWqB,YAAYF,EAAKG,MACE,OAA1BrB,EAAUsB,aACZC,IAAQC,QAAQ,+CACT,IAGTC,OAAOP,KAAOA,EACT,wCAAwCQ,KAAKR,EAAKS,MAInDT,EAAKU,KAAO,SACdL,IAAQM,MAAM,gCACP,IAGT9B,EAAW+B,SACRC,MAAK,SAACrB,OACJsB,OAAM,gBAEJ,IAZLT,IAAQM,MAAM,iFACP,MAeb,OACE,6BACE,kBAAC,IAAD,CAAMI,IAAI,qBAAMC,SAAUnC,EAAWoC,aACnC,kBAAChD,EAAY4B,EACX,uBAAGqB,UAAU,wBACX,kBAACC,EAAA,EAAD,OAEF,uBAAGD,UAAU,mBAAb,wCACA,uBAAGA,UAAU,mBAAb,oHAOFrC,EAAWW,WAAa,kBAACrB,EAAD,KACtB,kBAACG,EAAD,iCACA,4BACE,wDACA,4BAAI,uBAAG8C,OAAO,SACPC,KAAMxC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,KAAMb,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,MAEnH,kDACA,4BAAKb,EAAWyC,UAChB,wDACA,4BAAI,kBAAC9C,EAAD,CAAO+C,IAAK1C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAK8B,IAAI,MACzE,wDACA,4BACE,2BAAOC,IAAK1C,EAAM2C,SA/DN,WACtBxC,EAAMG,SAASN,EAAK4C,QAAQC,QA8D2BC,YAAY,qDACzD,2BAAOJ,IAAKxC,EAAMyC,SA7DL,WACvBxC,EAAMK,UAAUN,EAAK0C,QAAQC,QA4D2BC,YAAY,sDAE5D,4BACE,uBAAGT,OAAO,SAASC,KAAMnC,EAAM4C,SAAU5C,EAAM4C,YAGzC,S,oJChHpB,IAAMC,EAAO3D,IAAOC,IAAV,KAkBKK,EAXGC,aAAS,YAAmB,IAAhBqD,EAAe,EAAfA,SACpBlD,EAAcF,cAAdE,UACR,OACE,oCAEIA,EAAUsB,YAAc,KAAO,kBAAC2B,EAAD,KAAOC,OCXxCC,EAAOtD,aAAS,WAAO,IACpBG,EAAaF,cAAbE,UACP,OACE,oCAEIA,EAAUsB,YAAc,KAAO,kBAAC,EAAD,+DAEjC,kBAAC8B,EAAD,UAKSD","file":"static/js/10.d14e0104.chunk.js","sourcesContent":["import React, {useRef} from 'react'\nimport {useStores} from '../stores'\nimport {observer, useLocalStore} from 'mobx-react'\nimport {message, Upload} from 'antd'\nimport {InboxOutlined} from '@ant-design/icons'\nimport styled from 'styled-components'\nimport Spin from 'antd/es/spin'\n\nconst {Dragger} = Upload\n\nconst Result = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  padding: 20px;\n`\nconst H1 = styled.h1`\n  margin: 20px 0;\n  text-align: center;\n`\nconst Image = styled.img`\n  max-width: 300px;\n`\n\nconst Component = observer(() => {\n  const {ImageStore, UserStore} = useStores()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const store = useLocalStore(() => ({\n    width: null,\n    setWidth(width) {\n      store.width = width\n    },\n    get widthStr() {\n      return store.width ? `/w/${store.width}` : ''\n    },\n    height: null,\n    setHeight(height) {\n      store.height = height\n    },\n    get heightStr() {\n      return store.height ? `/h/${store.height}` : ''\n    },\n    get fullStr() {\n      return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\n    }\n  }))\n\n  const bindWidthChange = () => {\n    store.setWidth(ref1.current.value)\n  }\n  const bindHeightChange = () => {\n    store.setHeight(ref2.current.value)\n  }\n\n  const props = {\n    showUploadList: false,\n    beforeUpload: file => {\n      ImageStore.setFile(file)\n      ImageStore.setFilename(file.name)\n      if (UserStore.currentUser === null) {\n        message.warning('请先登录再上传')\n        return false\n      }\n\n      window.file = file\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\n        message.error('只能上传 svg/png/jpg/jpeg/gif 格式的图片')\n        return false\n      }\n      if (file.size > 1024 * 1024) {\n        message.error('图片最大 1M')\n        return false\n      }\n\n      ImageStore.upload()\n        .then((serverFile) => {\n        }).catch(() => {\n      })\n      return false\n    }\n  }\n\n  return (\n    <div>\n      <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined/>\n          </p>\n          <p className=\"ant-upload-text\">点击上传图片</p>\n          <p className=\"ant-upload-hint\">\n            只能上传 svg/png/jpg/jpeg/gif 格式的图片,且图片最大 1M\n          </p>\n        </Dragger>\n      </Spin>\n\n      {\n        ImageStore.serverFile ? <Result>\n          <H1>上传结果</H1>\n          <dl>\n            <dt>线上地址</dt>\n            <dd><a target=\"_blank\"\n                   href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a>\n            </dd>\n            <dt>文件名</dt>\n            <dd>{ImageStore.filename}</dd>\n            <dt>图片预览</dt>\n            <dd><Image src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"\"/></dd>\n            <dt>更多尺寸</dt>\n            <dd>\n              <input ref={ref1} onChange={bindWidthChange} placeholder=\"最大宽度（可选）\"/>\n              <input ref={ref2} onChange={bindHeightChange} placeholder=\"最大高度（可选）\"/>\n            </dd>\n            <dd>\n              <a target=\"_blank\" href={store.fullStr}>{store.fullStr}</a>\n            </dd>\n          </dl>\n        </Result> : null\n      }\n    </div>\n  )\n})\n\nexport default Component","import React from 'react'\nimport { useStores } from '../stores'\nimport { observer } from 'mobx-react'\nimport styled from 'styled-components'\n\nconst Tips = styled.div`\n  background: #40a9ff;\n  padding: 10px;\n  margin: 30px 0;\n  color: #fff;\n`\n\nconst Component = observer(({ children }) => {\n  const { UserStore } = useStores()\n  return (\n    <>\n      {\n        UserStore.currentUser ? null : <Tips>{children}</Tips>\n      }\n    </>\n  )\n})\n\nexport default Component","import React from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from '../stores'\nimport Uploader from '../components/Uploader'\nimport Tips from '../components/Tips'\n\nconst Home = observer(() => {\n  const {UserStore} = useStores()\n  return (\n    <>\n      {\n        UserStore.currentUser ? null : <Tips>请先登录再上传文件</Tips>\n      }\n      <Uploader/>\n    </>\n  )\n})\n\nexport default Home"],"sourceRoot":""}